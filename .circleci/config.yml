version: 2.1

executors:
  rust-latest:
    working_directory: ~/repo
    docker:
      - image: circleci/rust:latest

jobs:
  build:
    executor: rust-latest
    steps:
      - checkout
      - run:
          name: Check formatting
          command: |
            rustfmt --version
            cargo fmt -- --check
      - run:
          name: update dependencies if releasing
          command: |
            if [[ "$CIRCLE_BRANCH" =~ release/v.* ]]; then
              cargo install cargo-edit
              grep branch Cargo.toml | grep develop | awk '{print $1}' | xargs -I[] cargo add --allow-prerelease []
              export CARGO_VER=$(echo $CIRCLE_BRANCH | sed 's:release/v::')
              sed -i "s/^version.*/version = \"$CARGO_VER\"/" Cargo.toml
            fi
      - run:
          name: Stable Build
          command: |
            rustup update
            rustup toolchain install stable
            rustup run stable rustc --version --verbose
            rustup run stable cargo --version --verbose
            rustup run stable cargo build
      - run:
          name: Wasm Build
          command: |
            rustup target add wasm32-unknown-unknown --toolchain stable
            rustup run stable cargo build --release --target wasm32-unknown-unknown
      - save_cache:
          key: git-sha-{{ .Revision }}{{ .Branch }}
          paths:
            - ~/.cargo
            - ./target
            - Cargo.toml
            - Cargo.lock

  test:
    executor: rust-latest
    steps:
      - checkout
      - restore_cache:
          key: git-sha-{{ .Revision }}{{ .Branch }}
      - run:
          name: Test
          command: |
            rustup toolchain install stable
            rustup run stable cargo test

  publish-latest:
    executor: rust-latest
    steps:
      - checkout
      - restore_cache:
          key: git-sha-{{ .Revision }}{{ .Branch }}
      - run:
          name: cargo login
          command: cargo login $cargo_TOKEN
      - run:
          name: setup git config
          command: git config user.email "dev@mazzaroth.io" && git config user.name "CircleCI" && git config --global core.editor "\usr\local\bin\subl -n -w"
      - run:
          name: commit updates
          command: git add -A && git commit -m "Dependency/Version update for $CIRCLE_BRANCH"
      - run:
          name: cargo publish
          command: |
            cargo publish
      - run:
          name: update master
          command: git rebase -Xtheirs origin/master && git push origin $CIRCLE_BRANCH:master
      - run:
          name: tag release
          command: |
            export GIT_TAG=$(echo $CIRCLE_BRANCH | sed 's:release/::')
            git checkout master
            git tag $GIT_TAG
            git push origin $GIT_TAG
      - run:
          name: checkout and develop
          command: git checkout develop
      - run:
          name: update develop version
          command: |
            export RELEASE_VERSION=$(echo $CIRCLE_BRANCH | sed 's:release/v::')
            sed -i "s/^version.*/version = \"$RELEASE_VERSION\"/" Cargo.toml
      - run:
          name: commit updates
          command: git add -A && git commit -m "Version update for $CIRCLE_BRANCH" && git push origin develop


workflows:
  version: 2.1
  build_test_deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      - publish-latest:
          requires:
            - test
          filters:
            branches:
              only: /release\/v([0-9]+)\.([0-9]+)\.([0-9]+)$/
